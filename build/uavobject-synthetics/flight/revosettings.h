/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup RevoSettings RevoSettings 
 * @brief Settings for the revo to control the algorithm and what is updated
 *
 * Autogenerated files and functions for RevoSettings Object
 
 * @{ 
 *
 * @file       revosettings.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @author     PhoenixPilot, http://github.com/PhoenixPilot, Copyright (C) 2012
 * @brief      Implementation of the RevoSettings object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: revosettings.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef REVOSETTINGS_H
#define REVOSETTINGS_H

// Object constants
#define REVOSETTINGS_OBJID 0x7EDBF0FE
#define REVOSETTINGS_ISSINGLEINST 1
#define REVOSETTINGS_ISSETTINGS 1
#define REVOSETTINGS_NUMBYTES 1

// Generic interface functions
int32_t RevoSettingsInitialize();
UAVObjHandle RevoSettingsHandle();
void RevoSettingsSetDefaults(UAVObjHandle obj, uint16_t instId);

// Object data
typedef struct {
    uint8_t FusionAlgorithm;

} __attribute__((packed)) __attribute__((aligned(4))) RevoSettingsData;

// Typesafe Object access functions
/**
 * @function RevoSettingsGet(dataOut)
 * @brief Populate a RevoSettingsData object
 * @param[out] dataOut 
 */
static inline int32_t RevoSettingsGet(RevoSettingsData *dataOut) { return UAVObjGetData(RevoSettingsHandle(), dataOut); }

static inline int32_t RevoSettingsSet(const RevoSettingsData *dataIn) { return UAVObjSetData(RevoSettingsHandle(), dataIn); }

static inline int32_t RevoSettingsInstGet(uint16_t instId, RevoSettingsData *dataOut) { return UAVObjGetInstanceData(RevoSettingsHandle(), instId, dataOut); }

static inline int32_t RevoSettingsInstSet(uint16_t instId, const RevoSettingsData *dataIn) { return UAVObjSetInstanceData(RevoSettingsHandle(), instId, dataIn); }

static inline int32_t RevoSettingsConnectQueue(xQueueHandle queue) { return UAVObjConnectQueue(RevoSettingsHandle(), queue, EV_MASK_ALL_UPDATES); }

static inline int32_t RevoSettingsConnectCallback(UAVObjEventCallback cb) { return UAVObjConnectCallback(RevoSettingsHandle(), cb, EV_MASK_ALL_UPDATES); }

static inline uint16_t RevoSettingsCreateInstance() { return UAVObjCreateInstance(RevoSettingsHandle(), &RevoSettingsSetDefaults); }

static inline void RevoSettingsRequestUpdate() { UAVObjRequestUpdate(RevoSettingsHandle()); }

static inline void RevoSettingsRequestInstUpdate(uint16_t instId) { UAVObjRequestInstanceUpdate(RevoSettingsHandle(), instId); }

static inline void RevoSettingsUpdated() { UAVObjUpdated(RevoSettingsHandle()); }

static inline void RevoSettingsInstUpdated(uint16_t instId) { UAVObjInstanceUpdated(RevoSettingsHandle(), instId); }

static inline int32_t RevoSettingsGetMetadata(UAVObjMetadata *dataOut) { return UAVObjGetMetadata(RevoSettingsHandle(), dataOut); }

static inline int32_t RevoSettingsSetMetadata(const UAVObjMetadata *dataIn) { return UAVObjSetMetadata(RevoSettingsHandle(), dataIn); }

static inline int8_t RevoSettingsReadOnly() { return UAVObjReadOnly(RevoSettingsHandle()); }

// Field information
// Field FusionAlgorithm information
/* Enumeration options for field FusionAlgorithm */
typedef enum { REVOSETTINGS_FUSIONALGORITHM_COMPLEMENTARY=0, REVOSETTINGS_FUSIONALGORITHM_INSINDOOR=1, REVOSETTINGS_FUSIONALGORITHM_INSOUTDOOR=2 } RevoSettingsFusionAlgorithmOptions;


// set/Get functions
extern void RevoSettingsFusionAlgorithmSet( uint8_t *NewFusionAlgorithm );
extern void RevoSettingsFusionAlgorithmGet( uint8_t *NewFusionAlgorithm );


#endif // REVOSETTINGS_H

/**
 * @}
 * @}
 */
