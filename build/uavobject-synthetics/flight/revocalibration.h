/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup RevoCalibration RevoCalibration 
 * @brief Leftover settings for Revo
 *
 * Autogenerated files and functions for RevoCalibration Object
 
 * @{ 
 *
 * @file       revocalibration.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @author     PhoenixPilot, http://github.com/PhoenixPilot, Copyright (C) 2012
 * @brief      Implementation of the RevoCalibration object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: revocalibration.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef REVOCALIBRATION_H
#define REVOCALIBRATION_H

// Object constants
#define REVOCALIBRATION_OBJID 0xD84282F8
#define REVOCALIBRATION_ISSINGLEINST 1
#define REVOCALIBRATION_ISSETTINGS 1
#define REVOCALIBRATION_NUMBYTES 24

// Generic interface functions
int32_t RevoCalibrationInitialize();
UAVObjHandle RevoCalibrationHandle();
void RevoCalibrationSetDefaults(UAVObjHandle obj, uint16_t instId);

// Object data
typedef struct {
    float MagBias[3];
    float MagScale[3];

} __attribute__((packed)) __attribute__((aligned(4))) RevoCalibrationData;

// Typesafe Object access functions
/**
 * @function RevoCalibrationGet(dataOut)
 * @brief Populate a RevoCalibrationData object
 * @param[out] dataOut 
 */
static inline int32_t RevoCalibrationGet(RevoCalibrationData *dataOut) { return UAVObjGetData(RevoCalibrationHandle(), dataOut); }

static inline int32_t RevoCalibrationSet(const RevoCalibrationData *dataIn) { return UAVObjSetData(RevoCalibrationHandle(), dataIn); }

static inline int32_t RevoCalibrationInstGet(uint16_t instId, RevoCalibrationData *dataOut) { return UAVObjGetInstanceData(RevoCalibrationHandle(), instId, dataOut); }

static inline int32_t RevoCalibrationInstSet(uint16_t instId, const RevoCalibrationData *dataIn) { return UAVObjSetInstanceData(RevoCalibrationHandle(), instId, dataIn); }

static inline int32_t RevoCalibrationConnectQueue(xQueueHandle queue) { return UAVObjConnectQueue(RevoCalibrationHandle(), queue, EV_MASK_ALL_UPDATES); }

static inline int32_t RevoCalibrationConnectCallback(UAVObjEventCallback cb) { return UAVObjConnectCallback(RevoCalibrationHandle(), cb, EV_MASK_ALL_UPDATES); }

static inline uint16_t RevoCalibrationCreateInstance() { return UAVObjCreateInstance(RevoCalibrationHandle(), &RevoCalibrationSetDefaults); }

static inline void RevoCalibrationRequestUpdate() { UAVObjRequestUpdate(RevoCalibrationHandle()); }

static inline void RevoCalibrationRequestInstUpdate(uint16_t instId) { UAVObjRequestInstanceUpdate(RevoCalibrationHandle(), instId); }

static inline void RevoCalibrationUpdated() { UAVObjUpdated(RevoCalibrationHandle()); }

static inline void RevoCalibrationInstUpdated(uint16_t instId) { UAVObjInstanceUpdated(RevoCalibrationHandle(), instId); }

static inline int32_t RevoCalibrationGetMetadata(UAVObjMetadata *dataOut) { return UAVObjGetMetadata(RevoCalibrationHandle(), dataOut); }

static inline int32_t RevoCalibrationSetMetadata(const UAVObjMetadata *dataIn) { return UAVObjSetMetadata(RevoCalibrationHandle(), dataIn); }

static inline int8_t RevoCalibrationReadOnly() { return UAVObjReadOnly(RevoCalibrationHandle()); }

// Field information
// Field MagBias information
/* Array element names for field MagBias */
typedef enum { REVOCALIBRATION_MAGBIAS_X=0, REVOCALIBRATION_MAGBIAS_Y=1, REVOCALIBRATION_MAGBIAS_Z=2 } RevoCalibrationMagBiasElem;
/* Number of elements for field MagBias */
#define REVOCALIBRATION_MAGBIAS_NUMELEM 3
// Field MagScale information
/* Array element names for field MagScale */
typedef enum { REVOCALIBRATION_MAGSCALE_X=0, REVOCALIBRATION_MAGSCALE_Y=1, REVOCALIBRATION_MAGSCALE_Z=2 } RevoCalibrationMagScaleElem;
/* Number of elements for field MagScale */
#define REVOCALIBRATION_MAGSCALE_NUMELEM 3


// set/Get functions
extern void RevoCalibrationMagBiasSet( float *NewMagBias );
extern void RevoCalibrationMagBiasGet( float *NewMagBias );
extern void RevoCalibrationMagScaleSet( float *NewMagScale );
extern void RevoCalibrationMagScaleGet( float *NewMagScale );


#endif // REVOCALIBRATION_H

/**
 * @}
 * @}
 */
