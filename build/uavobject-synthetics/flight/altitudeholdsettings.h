/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup AltitudeHoldSettings AltitudeHoldSettings 
 * @brief Settings for the @ref AltitudeHold module
 *
 * Autogenerated files and functions for AltitudeHoldSettings Object
 
 * @{ 
 *
 * @file       altitudeholdsettings.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @author     PhoenixPilot, http://github.com/PhoenixPilot, Copyright (C) 2012
 * @brief      Implementation of the AltitudeHoldSettings object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: altitudeholdsettings.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef ALTITUDEHOLDSETTINGS_H
#define ALTITUDEHOLDSETTINGS_H

// Object constants
#define ALTITUDEHOLDSETTINGS_OBJID 0xFEC55B42
#define ALTITUDEHOLDSETTINGS_ISSINGLEINST 1
#define ALTITUDEHOLDSETTINGS_ISSETTINGS 1
#define ALTITUDEHOLDSETTINGS_NUMBYTES 28

// Generic interface functions
int32_t AltitudeHoldSettingsInitialize();
UAVObjHandle AltitudeHoldSettingsHandle();
void AltitudeHoldSettingsSetDefaults(UAVObjHandle obj, uint16_t instId);

// Object data
typedef struct {
    float Kp;
    float Ki;
    float Kd;
    float Ka;
    float PressureNoise;
    float AccelNoise;
    float AccelDrift;

} __attribute__((packed)) __attribute__((aligned(4))) AltitudeHoldSettingsData;

// Typesafe Object access functions
/**
 * @function AltitudeHoldSettingsGet(dataOut)
 * @brief Populate a AltitudeHoldSettingsData object
 * @param[out] dataOut 
 */
static inline int32_t AltitudeHoldSettingsGet(AltitudeHoldSettingsData *dataOut) { return UAVObjGetData(AltitudeHoldSettingsHandle(), dataOut); }

static inline int32_t AltitudeHoldSettingsSet(const AltitudeHoldSettingsData *dataIn) { return UAVObjSetData(AltitudeHoldSettingsHandle(), dataIn); }

static inline int32_t AltitudeHoldSettingsInstGet(uint16_t instId, AltitudeHoldSettingsData *dataOut) { return UAVObjGetInstanceData(AltitudeHoldSettingsHandle(), instId, dataOut); }

static inline int32_t AltitudeHoldSettingsInstSet(uint16_t instId, const AltitudeHoldSettingsData *dataIn) { return UAVObjSetInstanceData(AltitudeHoldSettingsHandle(), instId, dataIn); }

static inline int32_t AltitudeHoldSettingsConnectQueue(xQueueHandle queue) { return UAVObjConnectQueue(AltitudeHoldSettingsHandle(), queue, EV_MASK_ALL_UPDATES); }

static inline int32_t AltitudeHoldSettingsConnectCallback(UAVObjEventCallback cb) { return UAVObjConnectCallback(AltitudeHoldSettingsHandle(), cb, EV_MASK_ALL_UPDATES); }

static inline uint16_t AltitudeHoldSettingsCreateInstance() { return UAVObjCreateInstance(AltitudeHoldSettingsHandle(), &AltitudeHoldSettingsSetDefaults); }

static inline void AltitudeHoldSettingsRequestUpdate() { UAVObjRequestUpdate(AltitudeHoldSettingsHandle()); }

static inline void AltitudeHoldSettingsRequestInstUpdate(uint16_t instId) { UAVObjRequestInstanceUpdate(AltitudeHoldSettingsHandle(), instId); }

static inline void AltitudeHoldSettingsUpdated() { UAVObjUpdated(AltitudeHoldSettingsHandle()); }

static inline void AltitudeHoldSettingsInstUpdated(uint16_t instId) { UAVObjInstanceUpdated(AltitudeHoldSettingsHandle(), instId); }

static inline int32_t AltitudeHoldSettingsGetMetadata(UAVObjMetadata *dataOut) { return UAVObjGetMetadata(AltitudeHoldSettingsHandle(), dataOut); }

static inline int32_t AltitudeHoldSettingsSetMetadata(const UAVObjMetadata *dataIn) { return UAVObjSetMetadata(AltitudeHoldSettingsHandle(), dataIn); }

static inline int8_t AltitudeHoldSettingsReadOnly() { return UAVObjReadOnly(AltitudeHoldSettingsHandle()); }

// Field information
// Field Kp information
// Field Ki information
// Field Kd information
// Field Ka information
// Field PressureNoise information
// Field AccelNoise information
// Field AccelDrift information


// set/Get functions
extern void AltitudeHoldSettingsKpSet( float *NewKp );
extern void AltitudeHoldSettingsKpGet( float *NewKp );
extern void AltitudeHoldSettingsKiSet( float *NewKi );
extern void AltitudeHoldSettingsKiGet( float *NewKi );
extern void AltitudeHoldSettingsKdSet( float *NewKd );
extern void AltitudeHoldSettingsKdGet( float *NewKd );
extern void AltitudeHoldSettingsKaSet( float *NewKa );
extern void AltitudeHoldSettingsKaGet( float *NewKa );
extern void AltitudeHoldSettingsPressureNoiseSet( float *NewPressureNoise );
extern void AltitudeHoldSettingsPressureNoiseGet( float *NewPressureNoise );
extern void AltitudeHoldSettingsAccelNoiseSet( float *NewAccelNoise );
extern void AltitudeHoldSettingsAccelNoiseGet( float *NewAccelNoise );
extern void AltitudeHoldSettingsAccelDriftSet( float *NewAccelDrift );
extern void AltitudeHoldSettingsAccelDriftGet( float *NewAccelDrift );


#endif // ALTITUDEHOLDSETTINGS_H

/**
 * @}
 * @}
 */
