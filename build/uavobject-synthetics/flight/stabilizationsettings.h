/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{ 
 * @addtogroup StabilizationSettings StabilizationSettings 
 * @brief PID settings used by the Stabilization module to combine the @ref AttitudeActual and @ref AttitudeDesired to compute @ref ActuatorDesired
 *
 * Autogenerated files and functions for StabilizationSettings Object
 
 * @{ 
 *
 * @file       stabilizationsettings.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @author     PhoenixPilot, http://github.com/PhoenixPilot, Copyright (C) 2012
 * @brief      Implementation of the StabilizationSettings object. This file has been 
 *             automatically generated by the UAVObjectGenerator.
 * 
 * @note       Object definition file: stabilizationsettings.xml. 
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef STABILIZATIONSETTINGS_H
#define STABILIZATIONSETTINGS_H

// Object constants
#define STABILIZATIONSETTINGS_OBJID 0x3D03DE86
#define STABILIZATIONSETTINGS_ISSINGLEINST 1
#define STABILIZATIONSETTINGS_ISSETTINGS 1
#define STABILIZATIONSETTINGS_NUMBYTES 171

// Generic interface functions
int32_t StabilizationSettingsInitialize();
UAVObjHandle StabilizationSettingsHandle();
void StabilizationSettingsSetDefaults(UAVObjHandle obj, uint16_t instId);

// Object data
typedef struct {
    float ManualRate[3];
    float MaximumRate[3];
    float RollRatePID[4];
    float PitchRatePID[4];
    float YawRatePID[4];
    float RollPI[3];
    float PitchPI[3];
    float YawPI[3];
    float VbarSensitivity[3];
    float VbarRollPI[2];
    float VbarPitchPI[2];
    float VbarYawPI[2];
    float VbarTau;
    float GyroTau;
    float DerivativeGamma;
    float WeakLevelingKp;
    uint8_t RollMax;
    uint8_t PitchMax;
    uint8_t YawMax;
    int8_t VbarGyroSuppress;
    uint8_t VbarPiroComp;
    uint8_t VbarMaxAngle;
    uint8_t DerivativeCutoff;
    uint8_t MaxAxisLock;
    uint8_t MaxAxisLockRate;
    uint8_t MaxWeakLevelingRate;
    uint8_t LowThrottleZeroIntegral;

} __attribute__((packed)) __attribute__((aligned(4))) StabilizationSettingsData;

// Typesafe Object access functions
/**
 * @function StabilizationSettingsGet(dataOut)
 * @brief Populate a StabilizationSettingsData object
 * @param[out] dataOut 
 */
static inline int32_t StabilizationSettingsGet(StabilizationSettingsData *dataOut) { return UAVObjGetData(StabilizationSettingsHandle(), dataOut); }

static inline int32_t StabilizationSettingsSet(const StabilizationSettingsData *dataIn) { return UAVObjSetData(StabilizationSettingsHandle(), dataIn); }

static inline int32_t StabilizationSettingsInstGet(uint16_t instId, StabilizationSettingsData *dataOut) { return UAVObjGetInstanceData(StabilizationSettingsHandle(), instId, dataOut); }

static inline int32_t StabilizationSettingsInstSet(uint16_t instId, const StabilizationSettingsData *dataIn) { return UAVObjSetInstanceData(StabilizationSettingsHandle(), instId, dataIn); }

static inline int32_t StabilizationSettingsConnectQueue(xQueueHandle queue) { return UAVObjConnectQueue(StabilizationSettingsHandle(), queue, EV_MASK_ALL_UPDATES); }

static inline int32_t StabilizationSettingsConnectCallback(UAVObjEventCallback cb) { return UAVObjConnectCallback(StabilizationSettingsHandle(), cb, EV_MASK_ALL_UPDATES); }

static inline uint16_t StabilizationSettingsCreateInstance() { return UAVObjCreateInstance(StabilizationSettingsHandle(), &StabilizationSettingsSetDefaults); }

static inline void StabilizationSettingsRequestUpdate() { UAVObjRequestUpdate(StabilizationSettingsHandle()); }

static inline void StabilizationSettingsRequestInstUpdate(uint16_t instId) { UAVObjRequestInstanceUpdate(StabilizationSettingsHandle(), instId); }

static inline void StabilizationSettingsUpdated() { UAVObjUpdated(StabilizationSettingsHandle()); }

static inline void StabilizationSettingsInstUpdated(uint16_t instId) { UAVObjInstanceUpdated(StabilizationSettingsHandle(), instId); }

static inline int32_t StabilizationSettingsGetMetadata(UAVObjMetadata *dataOut) { return UAVObjGetMetadata(StabilizationSettingsHandle(), dataOut); }

static inline int32_t StabilizationSettingsSetMetadata(const UAVObjMetadata *dataIn) { return UAVObjSetMetadata(StabilizationSettingsHandle(), dataIn); }

static inline int8_t StabilizationSettingsReadOnly() { return UAVObjReadOnly(StabilizationSettingsHandle()); }

// Field information
// Field ManualRate information
/* Array element names for field ManualRate */
typedef enum { STABILIZATIONSETTINGS_MANUALRATE_ROLL=0, STABILIZATIONSETTINGS_MANUALRATE_PITCH=1, STABILIZATIONSETTINGS_MANUALRATE_YAW=2 } StabilizationSettingsManualRateElem;
/* Number of elements for field ManualRate */
#define STABILIZATIONSETTINGS_MANUALRATE_NUMELEM 3
// Field MaximumRate information
/* Array element names for field MaximumRate */
typedef enum { STABILIZATIONSETTINGS_MAXIMUMRATE_ROLL=0, STABILIZATIONSETTINGS_MAXIMUMRATE_PITCH=1, STABILIZATIONSETTINGS_MAXIMUMRATE_YAW=2 } StabilizationSettingsMaximumRateElem;
/* Number of elements for field MaximumRate */
#define STABILIZATIONSETTINGS_MAXIMUMRATE_NUMELEM 3
// Field RollRatePID information
/* Array element names for field RollRatePID */
typedef enum { STABILIZATIONSETTINGS_ROLLRATEPID_KP=0, STABILIZATIONSETTINGS_ROLLRATEPID_KI=1, STABILIZATIONSETTINGS_ROLLRATEPID_KD=2, STABILIZATIONSETTINGS_ROLLRATEPID_ILIMIT=3 } StabilizationSettingsRollRatePIDElem;
/* Number of elements for field RollRatePID */
#define STABILIZATIONSETTINGS_ROLLRATEPID_NUMELEM 4
// Field PitchRatePID information
/* Array element names for field PitchRatePID */
typedef enum { STABILIZATIONSETTINGS_PITCHRATEPID_KP=0, STABILIZATIONSETTINGS_PITCHRATEPID_KI=1, STABILIZATIONSETTINGS_PITCHRATEPID_KD=2, STABILIZATIONSETTINGS_PITCHRATEPID_ILIMIT=3 } StabilizationSettingsPitchRatePIDElem;
/* Number of elements for field PitchRatePID */
#define STABILIZATIONSETTINGS_PITCHRATEPID_NUMELEM 4
// Field YawRatePID information
/* Array element names for field YawRatePID */
typedef enum { STABILIZATIONSETTINGS_YAWRATEPID_KP=0, STABILIZATIONSETTINGS_YAWRATEPID_KI=1, STABILIZATIONSETTINGS_YAWRATEPID_KD=2, STABILIZATIONSETTINGS_YAWRATEPID_ILIMIT=3 } StabilizationSettingsYawRatePIDElem;
/* Number of elements for field YawRatePID */
#define STABILIZATIONSETTINGS_YAWRATEPID_NUMELEM 4
// Field RollPI information
/* Array element names for field RollPI */
typedef enum { STABILIZATIONSETTINGS_ROLLPI_KP=0, STABILIZATIONSETTINGS_ROLLPI_KI=1, STABILIZATIONSETTINGS_ROLLPI_ILIMIT=2 } StabilizationSettingsRollPIElem;
/* Number of elements for field RollPI */
#define STABILIZATIONSETTINGS_ROLLPI_NUMELEM 3
// Field PitchPI information
/* Array element names for field PitchPI */
typedef enum { STABILIZATIONSETTINGS_PITCHPI_KP=0, STABILIZATIONSETTINGS_PITCHPI_KI=1, STABILIZATIONSETTINGS_PITCHPI_ILIMIT=2 } StabilizationSettingsPitchPIElem;
/* Number of elements for field PitchPI */
#define STABILIZATIONSETTINGS_PITCHPI_NUMELEM 3
// Field YawPI information
/* Array element names for field YawPI */
typedef enum { STABILIZATIONSETTINGS_YAWPI_KP=0, STABILIZATIONSETTINGS_YAWPI_KI=1, STABILIZATIONSETTINGS_YAWPI_ILIMIT=2 } StabilizationSettingsYawPIElem;
/* Number of elements for field YawPI */
#define STABILIZATIONSETTINGS_YAWPI_NUMELEM 3
// Field VbarSensitivity information
/* Array element names for field VbarSensitivity */
typedef enum { STABILIZATIONSETTINGS_VBARSENSITIVITY_ROLL=0, STABILIZATIONSETTINGS_VBARSENSITIVITY_PITCH=1, STABILIZATIONSETTINGS_VBARSENSITIVITY_YAW=2 } StabilizationSettingsVbarSensitivityElem;
/* Number of elements for field VbarSensitivity */
#define STABILIZATIONSETTINGS_VBARSENSITIVITY_NUMELEM 3
// Field VbarRollPI information
/* Array element names for field VbarRollPI */
typedef enum { STABILIZATIONSETTINGS_VBARROLLPI_KP=0, STABILIZATIONSETTINGS_VBARROLLPI_KI=1 } StabilizationSettingsVbarRollPIElem;
/* Number of elements for field VbarRollPI */
#define STABILIZATIONSETTINGS_VBARROLLPI_NUMELEM 2
// Field VbarPitchPI information
/* Array element names for field VbarPitchPI */
typedef enum { STABILIZATIONSETTINGS_VBARPITCHPI_KP=0, STABILIZATIONSETTINGS_VBARPITCHPI_KI=1 } StabilizationSettingsVbarPitchPIElem;
/* Number of elements for field VbarPitchPI */
#define STABILIZATIONSETTINGS_VBARPITCHPI_NUMELEM 2
// Field VbarYawPI information
/* Array element names for field VbarYawPI */
typedef enum { STABILIZATIONSETTINGS_VBARYAWPI_KP=0, STABILIZATIONSETTINGS_VBARYAWPI_KI=1 } StabilizationSettingsVbarYawPIElem;
/* Number of elements for field VbarYawPI */
#define STABILIZATIONSETTINGS_VBARYAWPI_NUMELEM 2
// Field VbarTau information
// Field GyroTau information
// Field DerivativeGamma information
// Field WeakLevelingKp information
// Field RollMax information
// Field PitchMax information
// Field YawMax information
// Field VbarGyroSuppress information
// Field VbarPiroComp information
/* Enumeration options for field VbarPiroComp */
typedef enum { STABILIZATIONSETTINGS_VBARPIROCOMP_FALSE=0, STABILIZATIONSETTINGS_VBARPIROCOMP_TRUE=1 } StabilizationSettingsVbarPiroCompOptions;
// Field VbarMaxAngle information
// Field DerivativeCutoff information
// Field MaxAxisLock information
// Field MaxAxisLockRate information
// Field MaxWeakLevelingRate information
// Field LowThrottleZeroIntegral information
/* Enumeration options for field LowThrottleZeroIntegral */
typedef enum { STABILIZATIONSETTINGS_LOWTHROTTLEZEROINTEGRAL_FALSE=0, STABILIZATIONSETTINGS_LOWTHROTTLEZEROINTEGRAL_TRUE=1 } StabilizationSettingsLowThrottleZeroIntegralOptions;


// set/Get functions
extern void StabilizationSettingsManualRateSet( float *NewManualRate );
extern void StabilizationSettingsManualRateGet( float *NewManualRate );
extern void StabilizationSettingsMaximumRateSet( float *NewMaximumRate );
extern void StabilizationSettingsMaximumRateGet( float *NewMaximumRate );
extern void StabilizationSettingsRollRatePIDSet( float *NewRollRatePID );
extern void StabilizationSettingsRollRatePIDGet( float *NewRollRatePID );
extern void StabilizationSettingsPitchRatePIDSet( float *NewPitchRatePID );
extern void StabilizationSettingsPitchRatePIDGet( float *NewPitchRatePID );
extern void StabilizationSettingsYawRatePIDSet( float *NewYawRatePID );
extern void StabilizationSettingsYawRatePIDGet( float *NewYawRatePID );
extern void StabilizationSettingsRollPISet( float *NewRollPI );
extern void StabilizationSettingsRollPIGet( float *NewRollPI );
extern void StabilizationSettingsPitchPISet( float *NewPitchPI );
extern void StabilizationSettingsPitchPIGet( float *NewPitchPI );
extern void StabilizationSettingsYawPISet( float *NewYawPI );
extern void StabilizationSettingsYawPIGet( float *NewYawPI );
extern void StabilizationSettingsVbarSensitivitySet( float *NewVbarSensitivity );
extern void StabilizationSettingsVbarSensitivityGet( float *NewVbarSensitivity );
extern void StabilizationSettingsVbarRollPISet( float *NewVbarRollPI );
extern void StabilizationSettingsVbarRollPIGet( float *NewVbarRollPI );
extern void StabilizationSettingsVbarPitchPISet( float *NewVbarPitchPI );
extern void StabilizationSettingsVbarPitchPIGet( float *NewVbarPitchPI );
extern void StabilizationSettingsVbarYawPISet( float *NewVbarYawPI );
extern void StabilizationSettingsVbarYawPIGet( float *NewVbarYawPI );
extern void StabilizationSettingsVbarTauSet( float *NewVbarTau );
extern void StabilizationSettingsVbarTauGet( float *NewVbarTau );
extern void StabilizationSettingsGyroTauSet( float *NewGyroTau );
extern void StabilizationSettingsGyroTauGet( float *NewGyroTau );
extern void StabilizationSettingsDerivativeGammaSet( float *NewDerivativeGamma );
extern void StabilizationSettingsDerivativeGammaGet( float *NewDerivativeGamma );
extern void StabilizationSettingsWeakLevelingKpSet( float *NewWeakLevelingKp );
extern void StabilizationSettingsWeakLevelingKpGet( float *NewWeakLevelingKp );
extern void StabilizationSettingsRollMaxSet( uint8_t *NewRollMax );
extern void StabilizationSettingsRollMaxGet( uint8_t *NewRollMax );
extern void StabilizationSettingsPitchMaxSet( uint8_t *NewPitchMax );
extern void StabilizationSettingsPitchMaxGet( uint8_t *NewPitchMax );
extern void StabilizationSettingsYawMaxSet( uint8_t *NewYawMax );
extern void StabilizationSettingsYawMaxGet( uint8_t *NewYawMax );
extern void StabilizationSettingsVbarGyroSuppressSet( int8_t *NewVbarGyroSuppress );
extern void StabilizationSettingsVbarGyroSuppressGet( int8_t *NewVbarGyroSuppress );
extern void StabilizationSettingsVbarPiroCompSet( uint8_t *NewVbarPiroComp );
extern void StabilizationSettingsVbarPiroCompGet( uint8_t *NewVbarPiroComp );
extern void StabilizationSettingsVbarMaxAngleSet( uint8_t *NewVbarMaxAngle );
extern void StabilizationSettingsVbarMaxAngleGet( uint8_t *NewVbarMaxAngle );
extern void StabilizationSettingsDerivativeCutoffSet( uint8_t *NewDerivativeCutoff );
extern void StabilizationSettingsDerivativeCutoffGet( uint8_t *NewDerivativeCutoff );
extern void StabilizationSettingsMaxAxisLockSet( uint8_t *NewMaxAxisLock );
extern void StabilizationSettingsMaxAxisLockGet( uint8_t *NewMaxAxisLock );
extern void StabilizationSettingsMaxAxisLockRateSet( uint8_t *NewMaxAxisLockRate );
extern void StabilizationSettingsMaxAxisLockRateGet( uint8_t *NewMaxAxisLockRate );
extern void StabilizationSettingsMaxWeakLevelingRateSet( uint8_t *NewMaxWeakLevelingRate );
extern void StabilizationSettingsMaxWeakLevelingRateGet( uint8_t *NewMaxWeakLevelingRate );
extern void StabilizationSettingsLowThrottleZeroIntegralSet( uint8_t *NewLowThrottleZeroIntegral );
extern void StabilizationSettingsLowThrottleZeroIntegralGet( uint8_t *NewLowThrottleZeroIntegral );


#endif // STABILIZATIONSETTINGS_H

/**
 * @}
 * @}
 */
